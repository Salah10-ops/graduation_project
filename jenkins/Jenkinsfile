pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REPO = 'python-app'
        IMAGE_TAG = "${env.BRANCH_NAME}-${env.BUILD_NUMBER}"
        ECR_URI = "340752816389.dkr.ecr.us-east-1.amazonaws.com/python-app"
        DEPLOY_NAMESPACE = "${env.BRANCH_NAME}" // test or prod
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${env.BRANCH_NAME}", url: 'https://github.com/Salah10-ops/graduation_project.git'
            }
        }

        stage('Set Up Docker Auth with ECR') {
            steps {
                script {
                    sh '''
                    aws ecr get-login-password --region $AWS_REGION | \
                    docker login --username AWS --password-stdin $ECR_URI
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('app') {
                    script {
                        sh "docker build -t $ECR_URI:$IMAGE_TAG ."
                    }
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    sh "docker push $ECR_URI:$IMAGE_TAG"
                }
            }
        }

        stage('Update K8s Deployment') {
            steps {
                script {
                    sh '''
                    aws eks update-kubeconfig --region $AWS_REGION --name devops-cluster

                    # Substitute the image URI in the deployment YAML
                    sed "s|<IMAGE>|$ECR_URI:$IMAGE_TAG|g" k8s/app-deployment.yaml | \
                    kubectl apply -n $DEPLOY_NAMESPACE -f -
                    
                    # Apply service and ingress as well
                    kubectl apply -n $DEPLOY_NAMESPACE -f kubernetes/app-service.yaml
                    kubectl apply -n $DEPLOY_NAMESPACE -f kubernetes/app-ingress.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment to $DEPLOY_NAMESPACE successful!"
        }
        failure {
            echo "❌ Deployment to $DEPLOY_NAMESPACE failed!"
        }
    }
}
