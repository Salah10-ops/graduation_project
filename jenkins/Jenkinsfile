pipeline {
    agent any

    environment {
        REGISTRY = "340752816389.dkr.ecr.us-east-1.amazonaws.com"
        IMAGE_NAME = "python-app"
        ECR_REPO = "python-app"
        AWS_REGION = "us-east-1"
        KUBECONFIG = "/home/jenkins/.kube/config"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${REGISTRY}/${ECR_REPO}:${GIT_COMMIT}")
                }
            }
        }

        stage('Login to ECR') {
            steps {
                script {
                    sh '''
                    aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY
                    '''
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    sh '''
                    docker tag ${REGISTRY}/${ECR_REPO}:${GIT_COMMIT} ${REGISTRY}/${ECR_REPO}:latest
                    docker push ${REGISTRY}/${ECR_REPO}:${GIT_COMMIT}
                    docker push ${REGISTRY}/${ECR_REPO}:latest
                    '''
                }
            }
        }

        stage('Apply Namespaces') {
            steps {
                script {
                    sh '''
                    kubectl --kubeconfig=${KUBECONFIG} apply -f k8s/namespace.yaml
                    '''
                }
            }
        }

        stage('Deploy to Test') {
            when {
                not { branch 'main' }
            }
            steps {
                script {
                    sh '''
                    kubectl --kubeconfig=${KUBECONFIG} apply -n test -f k8s/test/redis-deployment.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n test -f k8s/test/redis-service.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n test -f k8s/test/app-deployment.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n test -f k8s/test/app-service.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n test -f k8s/test/app-ingress.yaml
                    '''
                }
            }
        }

        stage('Deploy to Prod') {
            when {
                branch 'main'
            }
            steps {
                script {
                    sh '''
                    kubectl --kubeconfig=${KUBECONFIG} apply -n prod -f k8s/prod/redis-deployment.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n prod -f k8s/prod/redis-service.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n prod -f k8s/prod/app-deployment.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n prod -f k8s/prod/app-service.yaml
                    kubectl --kubeconfig=${KUBECONFIG} apply -n prod -f k8s/prod/app-ingress.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment Successful!'
        }
        failure {
            echo '❌ Deployment Failed.'
        }
    }
}
